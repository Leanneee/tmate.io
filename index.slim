---
layout: default
title: tmate â€¢ Instant terminal sharing
---

<a href="https://github.com/nviennot/tmate"><img style="position: absolute; top: 0; right:0; border: 0; width: 149px; height: 149px;" src="/img/fork-me-on-github-right-orange@2x.png" alt="Fork me on GitHub"></a>

.hero-unit
  h1 tmate
  h2 Instant terminal sharing

.row
  .span6
    <br />
    h4 1. Launch tmate
    p tmate is a fork of <a href="http://tmux.sourceforge.net/">tmux</a>. Launching tmate starts a new session.
      <br />
      <br />
      <br />

    h4 2. Share your session
    p tmate prints an ssh command at the bottom of the terminal.
      <br />
      <br />
      <br />

    h4 3. Pair program
    p Your mates can join your session with the ssh command.

  .span6
    .video

hr
.row
  .span6
    h2 Installation

    p tmate and tmux can coexist on the same system, they do not conflict with
      each other.

    .tabbable
      ul.nav.nav-tabs
        li.active: a[href="#macosx" data-toggle="tab"] Mac OS X
        li:        a[href="#ubuntu" data-toggle="tab"] Ubuntu
        li:        a[href="#source" data-toggle="tab"] From Source

      .tab-content
        #macosx.tab-pane.active
          p You need to have <a href="http://mxcl.github.io/homebrew/">Homebrew</a>
            installed as a prerequisite.
          pre brew update                      && \
              brew tap nviennot/homebrew-tmate && \
              brew install tmate
        #ubuntu.tab-pane
          p Only Ubuntu 12.04 and 12.10 have published packages for tmate.
            Please ask if you need support for more OSes.
          pre sudo apt-get install python-software-properties && \
              sudo add-apt-repository ppa:nviennot/tmate      && \
              sudo apt-get update                             && \
              sudo apt-get install tmate
        #source.tab-pane
          p Grab the sources from github:
            <a href="https://github.com/nviennot/tmate">https://github.com/nviennot/tmate</a>.<br />
            A few dependencies are required.<br />
            The Ubuntu packages names: cmake, pkg-config, libtool, libevent-dev, libncurses-dev, libssl-dev, zlib1g-dev.
          pre ./autogen.sh && \
              ./configure  && \
              make         && \
              make install &&

  .span6
    h2 Usage

    p Once installed, simply launch tmate with <code>tmate</code>.
    p Your mates will be using your tmux config and your key bindings.
    p The terminal
      is forced to 256 colors and UTF-8, so you don't need to pass
      <code>-2</code> as you may be used to do with tmux.
    p tmate uses the standard <code>.tmux.conf</code> configuration file and the
      <code>TMUX</code> environment variable to permit tmux scripting (in vim, etc.).
    p Run <code>tmate show-messages</code> in your shell to see tmate's log
      messages, including the ssh connection string.

hr
.row
  .span12
    h2 Technical Details
  .span6
    p Figure 1 depicts the architecture diagram with the different component of
      the system. The following describes the connection process with its
      security considerations, the protocol used between the two tmux servers,
      and the roadmap of tmate.

    h4 Connection process

    p When launching tmate, an ssh connection is established to tmate.io in the
      background through <a href="http://www.libssh.org/">libssh</a>.
      The server ssh key signatures are hardcoded in the tmate client and are
      verified during the DH exchange to prevent
      <a href="http://en.wikipedia.org/wiki/Man-in-the-middle_attack">man in the middle attacks</a>.
      The client is authenticated with local ssh keys.

    p When a connection is established on tmate.io, a 150 bits session token is
      generated, then a tmux server is spawned in a jail with no file system, with
      its own <a href="http://lwn.net/Articles/531114/#series_index">PID
      namespace</a> to isolate the server from other processes, and no user
      privileges. To allow this, all files required during the tmux server
      execution are opened before getting jailed. These measures are in place to limit
      the usefulness of possible exploits targeting the tmux server. The attacker
      would not be able to access other sessions, ensuring confidentiality.

    p When a mate connects to tmate.io with the ssh command, the tmux unix
      socket is looked up on the file system. On lookup failures, a random sleep
      is performed to prevent <a href="http://en.wikipedia.org/wiki/Timing_attack">timing attacks</a>,
      otherwise a tmux client is spawned and connected to the remote tmux
      server.

  .span6
    .fig
      img[src="/img/arch.svg"]
    p.fig-label <span>Figure 1:</span> Simplified Architecture Diagram

.row
  .span6

    h4 Protocol

    p The local and remote tmux servers communicate with a protocol on top of
      <a href="http://msgpack.org/">msgpack</a>, which is gzipped over ssh for
      network bandwidth efficiency as vim scrolling can generate massive amount
      of data.

    p In order to keep the remote tmux server in sync with the local tmux
      server, PTY window pane's raw outputs are streamed individually as opposed
      to synchronizing the entire tmux window. Furthermore, window layouts,
      status bar changes, and copy mode state are also replicated. Finally, most
      of the tmux commands (like bind-key) are replicated. This ensure that the
      key bindings are the same on both side.

    p The remote clients keystrokes are parsed, and the outcome is sent to the
      local tmux server. This includes tmux commands such as split-window,
      window pane keystrokes, or window size information.

    p This protocol ensure portability for future work such as a HTML5 client.

  .span6
    h4 Future Work

    p This project can take many interesting directions. <br />
      Here is what I have on the roadmap:

    ul
      li Make the user experience top notch. Please
         <a href="https://github.com/nviennot/tmate/issues">submit bug reports</a>
         when you see issues.

      li Tolerate network failures. Dealing with reconnections and roaming (IP
         changes) similarly to what <a href="http://mosh.mit.edu/">Mosh</a> offers.

      li Support for read-only clients. This would be easy to do by providing
         another session token, distinct from the read-write access one.

      li Each participants should be able to have their own tmux config.

      li Getting low latencies for everyone requires having nodes spread out
         all over the globe.

      li HTML5 client with fullscreen support, with audio.

      li Record sessions to provide replay and full text search.

      li Being able to make certain session public. This would be useful
         to pair people with similar interests, or to do screencasts.

hr
.row
  .span12
    h2 Get in touch

    p If you'd like to get in touch, here are your options:

    ul
      li Submit bug reports on github: <a href="https://github.com/nviennot/tmate/issues">https://github.com/nviennot/tmate/issues</a>.
      li Hit me on <a href="irc://irc.freenode.net/libssh">#tmate (freenode)</a>.
      li Post a message on Google Groups: <a href="https://groups.google.com/group/tmate-io">https://groups.google.com/group/tmate-io</a>.
      li Or send an email to <a href="mailto:tmate-io@googlegroups.com">tmate-io@googlegroups.com</a>.

    p Enjoy,<br />
      Nico.
